// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/service.proto

package trackdata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserTrack struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TrackId              string   `protobuf:"bytes,2,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserTrack) Reset()         { *m = UserTrack{} }
func (m *UserTrack) String() string { return proto.CompactTextString(m) }
func (*UserTrack) ProtoMessage()    {}
func (*UserTrack) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_f69b4682e6c4b316, []int{0}
}
func (m *UserTrack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserTrack.Unmarshal(m, b)
}
func (m *UserTrack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserTrack.Marshal(b, m, deterministic)
}
func (dst *UserTrack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTrack.Merge(dst, src)
}
func (m *UserTrack) XXX_Size() int {
	return xxx_messageInfo_UserTrack.Size(m)
}
func (m *UserTrack) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTrack.DiscardUnknown(m)
}

var xxx_messageInfo_UserTrack proto.InternalMessageInfo

func (m *UserTrack) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserTrack) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

type TrackServerId struct {
	TrackServerId        string   `protobuf:"bytes,1,opt,name=track_server_id,json=trackServerId,proto3" json:"track_server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackServerId) Reset()         { *m = TrackServerId{} }
func (m *TrackServerId) String() string { return proto.CompactTextString(m) }
func (*TrackServerId) ProtoMessage()    {}
func (*TrackServerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_f69b4682e6c4b316, []int{1}
}
func (m *TrackServerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackServerId.Unmarshal(m, b)
}
func (m *TrackServerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackServerId.Marshal(b, m, deterministic)
}
func (dst *TrackServerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackServerId.Merge(dst, src)
}
func (m *TrackServerId) XXX_Size() int {
	return xxx_messageInfo_TrackServerId.Size(m)
}
func (m *TrackServerId) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackServerId.DiscardUnknown(m)
}

var xxx_messageInfo_TrackServerId proto.InternalMessageInfo

func (m *TrackServerId) GetTrackServerId() string {
	if m != nil {
		return m.TrackServerId
	}
	return ""
}

type TrackChunk struct {
	StartPosition        int32    `protobuf:"varint,1,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	NumBytes             int32    `protobuf:"varint,2,opt,name=num_bytes,json=numBytes,proto3" json:"num_bytes,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackChunk) Reset()         { *m = TrackChunk{} }
func (m *TrackChunk) String() string { return proto.CompactTextString(m) }
func (*TrackChunk) ProtoMessage()    {}
func (*TrackChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_f69b4682e6c4b316, []int{2}
}
func (m *TrackChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackChunk.Unmarshal(m, b)
}
func (m *TrackChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackChunk.Marshal(b, m, deterministic)
}
func (dst *TrackChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackChunk.Merge(dst, src)
}
func (m *TrackChunk) XXX_Size() int {
	return xxx_messageInfo_TrackChunk.Size(m)
}
func (m *TrackChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackChunk.DiscardUnknown(m)
}

var xxx_messageInfo_TrackChunk proto.InternalMessageInfo

func (m *TrackChunk) GetStartPosition() int32 {
	if m != nil {
		return m.StartPosition
	}
	return 0
}

func (m *TrackChunk) GetNumBytes() int32 {
	if m != nil {
		return m.NumBytes
	}
	return 0
}

func (m *TrackChunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type TrackUpload struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TrackId              string   `protobuf:"bytes,3,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackUpload) Reset()         { *m = TrackUpload{} }
func (m *TrackUpload) String() string { return proto.CompactTextString(m) }
func (*TrackUpload) ProtoMessage()    {}
func (*TrackUpload) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_f69b4682e6c4b316, []int{3}
}
func (m *TrackUpload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackUpload.Unmarshal(m, b)
}
func (m *TrackUpload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackUpload.Marshal(b, m, deterministic)
}
func (dst *TrackUpload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackUpload.Merge(dst, src)
}
func (m *TrackUpload) XXX_Size() int {
	return xxx_messageInfo_TrackUpload.Size(m)
}
func (m *TrackUpload) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackUpload.DiscardUnknown(m)
}

var xxx_messageInfo_TrackUpload proto.InternalMessageInfo

func (m *TrackUpload) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrackUpload) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TrackUpload) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

func (m *TrackUpload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_f69b4682e6c4b316, []int{4}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*UserTrack)(nil), "resonate.api.trackdata.UserTrack")
	proto.RegisterType((*TrackServerId)(nil), "resonate.api.trackdata.TrackServerId")
	proto.RegisterType((*TrackChunk)(nil), "resonate.api.trackdata.TrackChunk")
	proto.RegisterType((*TrackUpload)(nil), "resonate.api.trackdata.TrackUpload")
	proto.RegisterType((*Empty)(nil), "resonate.api.trackdata.Empty")
}

func init() { proto.RegisterFile("rpc/service.proto", fileDescriptor_service_f69b4682e6c4b316) }

var fileDescriptor_service_f69b4682e6c4b316 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4d, 0x4f, 0xc2, 0x40,
	0x14, 0x4c, 0xf9, 0xee, 0x43, 0x44, 0xf7, 0xa0, 0x88, 0x17, 0xac, 0xc1, 0x70, 0xaa, 0x46, 0x0f,
	0x1e, 0x4d, 0x50, 0x0f, 0xdc, 0x4c, 0x91, 0x0b, 0x89, 0x21, 0x0b, 0xdd, 0xc4, 0x06, 0xbb, 0xbb,
	0xd9, 0x7d, 0x25, 0xe1, 0x47, 0xfa, 0x9f, 0xcc, 0xbe, 0x62, 0xc1, 0x44, 0xb8, 0xed, 0x7b, 0x33,
	0xb3, 0xb3, 0xd3, 0x29, 0x9c, 0x1a, 0xbd, 0xb8, 0xb5, 0xc2, 0xac, 0x92, 0x85, 0x08, 0xb5, 0x51,
	0xa8, 0xd8, 0x99, 0x11, 0x56, 0x49, 0x8e, 0x22, 0xe4, 0x3a, 0x09, 0xd1, 0xf0, 0xc5, 0x32, 0xe6,
	0xc8, 0x83, 0x27, 0xf0, 0x27, 0x56, 0x98, 0x77, 0xb7, 0x60, 0xe7, 0x50, 0xcf, 0xac, 0x30, 0xb3,
	0x24, 0xee, 0x78, 0x3d, 0x6f, 0xe0, 0x47, 0x35, 0x37, 0x8e, 0x62, 0x76, 0x01, 0x0d, 0x92, 0x38,
	0xa4, 0x44, 0x48, 0x9d, 0xe6, 0x51, 0x1c, 0x3c, 0x42, 0x8b, 0xc4, 0x63, 0x61, 0x56, 0xc4, 0xbd,
	0x81, 0x76, 0xce, 0xb5, 0xb4, 0xd9, 0x5e, 0xd6, 0xc2, 0x5d, 0x5e, 0x10, 0x03, 0x90, 0xf0, 0xf9,
	0x33, 0x93, 0x4b, 0xd6, 0x87, 0x63, 0x8b, 0xdc, 0xe0, 0x4c, 0x2b, 0x9b, 0x60, 0xa2, 0x24, 0x89,
	0xaa, 0x51, 0x8b, 0xb6, 0x6f, 0x9b, 0x25, 0xbb, 0x04, 0x5f, 0x66, 0xe9, 0x6c, 0xbe, 0x46, 0x61,
	0xe9, 0x25, 0xd5, 0xa8, 0x21, 0xb3, 0x74, 0xe8, 0x66, 0xc6, 0xa0, 0xe2, 0x32, 0x75, 0xca, 0x3d,
	0x6f, 0x70, 0x14, 0xd1, 0x39, 0x48, 0xa0, 0x49, 0x2e, 0x13, 0xfd, 0xa5, 0x78, 0xec, 0x28, 0x92,
	0xa7, 0x62, 0xf3, 0x22, 0x3a, 0xef, 0xa6, 0x2e, 0xed, 0x4d, 0x5d, 0xfe, 0x93, 0xba, 0xb0, 0xaa,
	0xec, 0x58, 0xd5, 0xa1, 0xfa, 0x9a, 0x6a, 0x5c, 0xdf, 0x7f, 0x7b, 0x70, 0x42, 0xa6, 0x2f, 0x1c,
	0xf9, 0x38, 0xaf, 0x81, 0x4d, 0xa1, 0x3d, 0x46, 0x23, 0x78, 0x5a, 0x20, 0xec, 0x2a, 0xfc, 0xbf,
	0x94, 0xb0, 0x68, 0xa4, 0x1b, 0xec, 0xa3, 0x6c, 0x3f, 0xdd, 0x9d, 0xc7, 0x3e, 0xa0, 0x9d, 0xe7,
	0xdb, 0xde, 0x7d, 0x7d, 0x50, 0x98, 0xb3, 0xbb, 0xfd, 0x83, 0xa4, 0xdf, 0xa6, 0x86, 0xcd, 0xa9,
	0x5f, 0x40, 0xf3, 0x1a, 0xfd, 0x4f, 0x0f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xaf, 0x80,
	0x4f, 0x64, 0x02, 0x00, 0x00,
}
